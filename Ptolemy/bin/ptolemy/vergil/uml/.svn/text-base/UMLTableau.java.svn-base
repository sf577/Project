package ptolemy.vergil.uml;

import java.awt.Frame;

import ptolemy.actor.TypedCompositeActor;
import ptolemy.actor.gui.Effigy;
import ptolemy.actor.gui.PtolemyEffigy;
import ptolemy.actor.gui.Tableau;
import ptolemy.actor.gui.TableauFactory;
import ptolemy.kernel.util.IllegalActionException;
import ptolemy.kernel.util.NameDuplicationException;
import ptolemy.kernel.util.NamedObj;
import ptolemy.kernel.util.Workspace;
import ptolemy.moml.EntityLibrary;
import ptolemy.moml.LibraryAttribute;
import ptolemy.moml.MoMLChangeRequest;


/**
 * This is a UML Sequence Diagram editor for PtolemyII models. A UMLFrame is
 * created which contains an editor pane based on DIVA.
 * 
 * As Tabeleau is derived from CompositeEntity, this tableau is part of a
 * Workspace as well.
 * 
 * @author Andreas Thuy, Leandro Soares Indrusiak, Modified by Sanna Maatta
 * Added new directors (Total Order and Partial Order) so that they appear in the UMLEditor window
 * 
 * last review: 11.9.2008
 */
public class UMLTableau extends Tableau {

	
	/**
	 * Create a UMLTableau with given container and name and with no specified
	 * library (defaultLibrary = null).
	 * 
	 * @param container - container of this UMLTableau
	 * @param name - name
	 * @throws IllegalActionException
	 * @throws NameDuplicationException
	 */
	public UMLTableau(PtolemyEffigy container, String name)
			throws IllegalActionException, NameDuplicationException {
		this(container, name, null);
	}
	
	/**
	 * Create a UMLTableau => see two argument constructor.
	 * 
	 * @param container
	 * @param name
	 * @param defaultLibrary - the default library
	 * @throws IllegalActionException
	 * @throws NameDuplicationException
	 */
	public UMLTableau(PtolemyEffigy container, String name,
			LibraryAttribute defaultLibrary) 
			throws IllegalActionException, NameDuplicationException {
		
		super(container, name);
		
		if(container instanceof PtolemyEffigy) {
			NamedObj model = container.getModel();
			LibraryAttribute lib = null;
			
			if(model == null)
				return;
			
			if(model instanceof UMLSeqActor) {
				EntityLibrary seqelements = new EntityLibrary(this.workspace());
				String lifelineString =
//                    "<entity name=\"sequence diagram elements\" class=\"ptolemy.moml.EntityLibrary\">"+
                    "<configure><?moml "+
                    "<group>"+
                    "<property name=\"PO SD Director\" class=\"ptolemy.domains.uml.kernel.SDPODirector\"></property>"+
                    "<property name=\"Lin SD Director\" class=\"ptolemy.domains.uml.kernel.SDLinDirector\"></property>"+
                    "<property name=\"Total Order\" class=\"lsi.noc.application.uml.directors.TotalOrder\"></property>"+
                    "<property name=\"Partial Order\" class=\"lsi.noc.application.uml.directors.PartialOrder\"></property>"+
                    "<property name=\"Lifeline\" class=\"ptolemy.vergil.uml.Lifeline\"></property>"+
					"</group> ?> </configure>";
				seqelements.configure(null, null, lifelineString);
				
				lib = new LibraryAttribute(model.workspace());
				//lib.setLibrary((CompositeEntity)model.getContainer());
				lib.setLibrary(seqelements);
				TypedCompositeActor entity = (TypedCompositeActor) model;
		        UMLFrame frame = new UMLFrame(entity, this, lib);
				setTitle("UML SD Editor");								
				setFrame(frame);
				
				
				
			}
			else {
				throw new IllegalActionException(this, 
				"This is not a UMLSeqActor...");
			}
		}
	}

	/**
	 * Create UMLTableau with specified workspace.
	 * 
	 * @param workspace
	 * @throws IllegalActionException
	 * @throws NameDuplicationException
	 */
	// TODO has this ever been tested?
	public UMLTableau(Workspace workspace) throws IllegalActionException,
			NameDuplicationException {
		super(workspace);		
	}

	public void show() {		
		super.show();
	//	getFrame().setExtendedState(Frame.MAXIMIZED_BOTH);
	//	getFrame().setResizable(false);
		
	}

}
