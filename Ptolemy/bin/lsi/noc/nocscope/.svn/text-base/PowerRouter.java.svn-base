//Copyright (c) 2008 Luciano Ost
//All rights reserved.
//Porto Alegre, 13/09/2008.

package lsi.noc.nocscope;

import java.awt.Graphics2D;
import java.awt.Polygon;
import java.awt.Color;

public class PowerRouter {

	//high power
	private double max=6.4;
	private double alocal=0, an=0, as=0, aw=0, ae=0;
	private Polygon local, n, s, w, e;

	public PowerRouter(){

		e=new Polygon();
		e.addPoint(100,0);
		e.addPoint(100,100);
		e.addPoint(70,70);
		e.addPoint(70,30);

		w=new Polygon();
		w.addPoint(0,0);
		w.addPoint(30,30);
		w.addPoint(30,70);
		w.addPoint(0,100);

		n=new Polygon();
		n.addPoint(0,0);
		n.addPoint(100,0);
		n.addPoint(70,30);
		n.addPoint(30,30);

		s=new Polygon();
		s.addPoint(0,100);
		s.addPoint(30,70);
		s.addPoint(70,70);
		s.addPoint(100,100);

		local=new Polygon();
		local.addPoint(30,30);
		local.addPoint(70,30);
		local.addPoint(70,70);
		local.addPoint(30,70);


	}

	public void paint(Graphics2D g){

		g.setColor(getColor((float)ae/(float)max));
		g.fill(e);
		g.setColor(Color.white);
		g.draw(e);
		g.drawString(new Double(ae).toString(), 73, 54);

		g.setColor(getColor((float)aw/(float)max));
		g.fill(w);
		g.setColor(Color.white);
		g.draw(w);
		g.drawString(new Double(aw).toString(), 5, 54);

		g.setColor(getColor((float)an/(float)max));
		g.fill(n);
		g.setColor(Color.white);
		g.draw(n);
		g.drawString(new Double(an).toString(), 38, 20);

		g.setColor(getColor((float)as/(float)max));
		g.fill(s);
		g.setColor(Color.white);
		g.draw(s);
		g.drawString(new Double(as).toString(), 38, 92);

		g.setColor(getColor((float)alocal/(float)max));
		g.fill(local);
		g.setColor(Color.white);
		g.draw(local);
		g.drawString(new Double(alocal).toString(), 38, 54);

	}


	private Color getColor(float ratio){
		Color c1 = Color.green;
		Color c2 = Color.red;
		int red = (int)(c2.getRed() * ratio + c1.getRed() * (1 - ratio));
		int green = (int)(c2.getGreen() * ratio +
				c1.getGreen() * (1 - ratio));
		int blue = (int)(c2.getBlue() * ratio +
				c1.getBlue() * (1 - ratio));
		try{
			return new Color(red, green, blue);
		}
		catch(IllegalArgumentException e){

			return Color.gray;
		}

	}

	public void setEast(double i){ae=i;}
	public void setWest(double i){aw=i;}
	public void setNorth(double i){an=i;}
	public void setSouth(double i){as=i;}
	public void setLocal(double i){alocal=i;}
	public void setMaxBufferSize(double i){max=i;}




}
